<html>
    <head>
        <meta charset="utf-8">
        <link rel="stylesheet" href="/estatico/css/bootstrap.min.css" />
        <link rel="stylesheet" href="/estatico/css/fontawesome.min.css" />
        <link rel="stylesheet" href="/estatico/css/casadocodigo.css" />
    </head>
    <body>
        <header class="cabecalhoPrincipal">
            <div class="container">
                <div class="row align-items-center">
                    <div class="col-4">
                        <h1 class="logo"><img src="/estatico/imagens/logo-casadocodigo.svg" alt="Casa do Código" /></h1>
                    </div>
                    <div class="cabecalhoPrincipal-navegacao col-8">
                        <a href="#" class="login">
                            <i class="fas fa-sign-in-alt"></i>Login
                        </a>
                    </div>
                </div>
            </div>
        </header>
        <main class="conteudoPrincipal">
            <div class="container">
                <h1>Cadastro de livros</h1>
                
                <form action="/livros" method="post">

                    <div if(data.livro.id)>
                        <input type="hidden" name="_method" value="PUT">
                        <input type="hidden" name="id" value="${data.livro.id}">
                    </div>

                    <div class="form-group">
                        <label for="titulo">Titulo:</label>
                        <input type="text" id="titulo" name="titulo" value="${data.livro.titulo}" placeholder="coloque o titulo" class="form-control"/>
                    </div>
                    <div class="form-group">
                        <label for="preco">Preço:</label>
                        <input type="text" id="preco" name="preco" placeholder="150.25" value="${data.livro.preco}" class="form-control"/>
                    </div>
                    <div class="form-group">
                        <label for="descricao">Descrição:</label>
                        <textarea cols="20" rows="10"  id="descricao" name="descricao" placeholder="fale sobre o livro" class="form-control">${data.livro.descricao}</textarea>
                    </div>

                    <input type="submit" value="Salvar" class="btn btn-primary"/>
                </form>
            </div>
        </main>
        <footer class="rodape">
            <div class="container">
                <div class="row align-items-center">
                    <div class="col-4">
                        <img src="/estatico/imagens/logo-rodape.svg" class="logo-rodape" />
                    </div>
                    <div class="col-8">
                        <ul class="redesSociais">
                            <li><a href="http://www.facebook.com/casadocodigo" class="compartilhar-facebook" target="_blank">/CasaDoCodigo</a></li>
                            <li><a href="http://www.twitter.com/casadocodigo" class="compartilhar-twitter" target="_blank">@casadocodigo</a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </footer>
    </body>
</html>

<!---
    No <input type "hidden" /> do arquivo form.marko, atribuiremos o valor do id do livro que foi passado
    para nosso template (${data.livro.id}).  Faremos a mesma coisa para o título (${data.livro.titulo}), para o 
    preço (${data.livro.preco}) e para a descrição (${data.livro.descricao}). Já no link de edição do arquivo
     lista.marko, preencheremos o atributo href, que antes estava apenas com #, 
     com /livros/form/${livro.id}, que é exatamente a rota que acabamos de criar.

     Dessa maneira, precisamos encontrar uma forma de filtrar todas as requisições que cheguem na
      aplicação, verificando se, nelas, existe ou não um valor para id. Ou seja, dada uma condição 
      específica, queremos sobrescrever o método de envio da nossa requisição.
      Felizmente, já existe um middleware que faz justamente isso, chamado method-override.
      Para implementarmos esse middleware, depois de utilizarmos o bodyParser, precisaremos declarar 
      o method-override, como no exemplo da documentação:

      Sempre que quisermos que um método seja sobrescrito, também precisaremos adicionar ao 
      formulário um <input> do tipo hidden com o nome _method e passando como valor o método 
      que será utilizado para sobrescrevê-lo:
      <input type="hidden" name="_method" value="DELETE">

      Por último, no form.marko, colocaremos o <input> referente ao método PUT. Porém, 
      temos que nos atentar ao fato de que queremos utilizar esse método somente quando estivermos
      editando um livro - ou seja, quando a propriedade livro tiver um id válido. Com a sintaxe do
      Marko JS, faremos isso facilmente, declarando uma <div> que só será exibida se data.livro.id for 
      válido. Tudo que estiver dentro dessa <div> (ou seja, os inputs ocultos) só será renderizado caso 
      tenhamos esse id válido - exatamente o que acontece quando estamos editando um livro.
-->